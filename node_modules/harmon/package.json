{
  "name": "harmon",
  "description": "A piece of middleware for node-http-proxy that allows you to modify the remote service response with trumpet",
  "tags": [
    "http-proxy",
    "trumpet",
    "middleware",
    "streaming",
    "html"
  ],
  "version": "0.0.3",
  "author": {
    "name": "Anton Whalley",
    "email": "anton.whalley@vodafone.ie"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/No9/harmon.git"
  },
  "bugs": {
    "url": "https://github.com/No9/harmon/issues"
  },
  "dependencies": {
    "http-proxy": "0.8.0",
    "trumpet": "0.3.0"
  },
  "devDependencies": {},
  "scripts": {
    "test": "node test/host.js"
  },
  "readme": "harmon\n======\n\nA middleware component for [node-http-proxy](https://github.com/nodejitsu/node-http-proxy) using [trumpet](https://github.com/substack/node-trumpet) to parse and transform the response from the proxied server.\n\n[![build status](https://secure.travis-ci.org/No9/harmon.png)](http://travis-ci.org/No9/harmon)\n\nWith apologies to [connect-gzip](https://github.com/nateps/connect-gzip)\n\n![harmon](http://i.imgur.com/fpMGL.png)\n\ninstall\n=======\n```\n$ npm install harmon\n```\nexamples\n========\n\nsimple\n------\n### Overview\n------------\nIn this example the HTML below is returned from the remote server and parsed:\n``` html\n<html>\n\t<head></head>\n\t<body>\n\t\t<div class=\"a\">Nodejitsu Http Proxy</div>\n\t\t<div class=\"b\">&amp; Frames</div>\n\t</body>\n</html>\n```\n  \nThe following line is removed: \n``` html\n<div class=\"b\">&amp; Frames</div> \n```\nAnd is replaced with: \n``` html \n<div>+ Trumpet</div>\n``` \n### Run It! \n----------- \nfrom your project root:\n```\n$ cd node_modules/harmon/examples\n$ node simple.js\n```\nBrowse to [localhost:8000](http://localhost:8000) and you should see:\n\n![simple output](http://i.imgur.com/Gpbzt.png)\n\n### Code\n--------\n``` js\nvar http = require('http'),\n    httpProxy = require('http-proxy');\n\n// Create an array of selects that harmon will process. \nvar actions = [];\n\n// Create a simple action\nvar simpleaction = {};\n\n// Select a node by its class name. You can also select by tag e.g. 'div'\nsimpleaction.query = '.b';\n\n// Create an function that is executed when that node is selected. Here we just replace '& frames' with '+trumpet' \nsimpleaction.func = function (node) {\n               \t\t\tnode.replace(function (html) {\n                \t\t\treturn '<div>+ Trumpet</div>';\n               \t\t\t});\n            \t\t} \n\n// Add the action to the action array\nactions.push(simpleaction);\n\n// Create a node-http-proxy configured with our harmon middleware\nhttpProxy.createServer(\n  require('../').harmon(actions),\n  9000, 'localhost'\n).listen(8000);\n\n// Create a simple web server for the proxy to send requests to and manipulate the data from\nhttp.createServer(function (req, res) {\n  res.writeHead(200, { 'Content-Type': 'text/html' });\n  res.write('<html><head></head><body><div class=\"a\">Nodejitsu Http Proxy</div><div class=\"b\">&amp; Frames</div></body></html>');\n  res.end();\n}).listen(9000); \n```\nor \nSee how images could be rotated.\n```\n$ cd node_modules/harmon/examples\n$ node rotate.js\n```\n\nSee [trumpet](https://github.com/No9/node-trumpet#update) for the types of queries and functions you can pass.",
  "_id": "harmon@0.0.3",
  "_from": "harmon"
}
